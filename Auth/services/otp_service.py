import requests
import random
from django.core.cache import cache


def generate_otp():

    otp_random = str(int(random.random() * 1000000))
    print(otp_random)
    return otp_random


def send_otp(mobile):
    """
    Used for sending the OTP on users device to verify
    Service : FAST2SMS
    """

    otp_value = generate_otp()
    payload = "sender_id=UPCLIK&message=136307&variables_values=" + otp_value + "|asdaswdx&route=dlt&numbers=" + mobile
    url = "https://www.fast2sms.com/dev/bulkV2"
    headers = {
        'authorization': "tl4vJzuUZL7cYe90DNgKoRFqynaP6X2WpTshmQdkxbSwAHC5iEEQ4WOiKhnoeqjIHdZkgBNR2PXL19ra",
        'Content-Type': "application/x-www-form-urlencoded",
        'Cache-Control': "no-cache",
    }

    cache_key = f"otp_{mobile}"
    cached_data = cache.get(cache_key)

    if not cached_data:
        print("didnt found in cache")
        cached_data = cache.set(cache_key, otp_value, 300)
    else:
        payload = "sender_id=UPCLIK&message=136307&variables_values=" + cached_data + "|asdaswdx&route=dlt&numbers=" + mobile

    response = requests.request("POST", url, data=payload, headers=headers)

    print(response.json())
    return response.json().get('return')


def verify_otp(mobile, otp):
    """
    Used for verifying the OTP send by clint and generated by system
    """
    cache_key = f"otp_{mobile}"
    cached_data = cache.get(cache_key)

    if cached_data is otp:
        return True

    return False
